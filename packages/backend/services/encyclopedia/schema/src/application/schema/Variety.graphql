type Variety {
  id: ID!
  name: String!
  background: String
  coffees: [Coffee]
  createdAt: String!
  updatedAt: String!
}

type VarietyConnection {
  pageInfo: PageInfo!
  edges: [VarietyEdge!]!
}

type VarietyEdge {
  cursor: String!
  node: Variety!
}

input CreateVarietyInput {
  name: String!
}

input UpdateVarietyInput {
  name: String
}

extend type Query {
  listVarieties(cursor: String, limit: Int, query: [QueryInput!]): VarietyConnection!
  getVariety(id: ID!): Variety
}

extend type Mutation {
  createVariety(input: CreateVarietyInput!): Variety
  updateVariety(id: ID!, input: UpdateVarietyInput!): Variety
  deleteVariety(id: ID!): Variety
  makeVarietyPublic(id: ID!): Boolean
}
